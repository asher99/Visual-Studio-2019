{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\u05D0\\u05E9\\u05E8 \\u05D0\\u05DC\\u05DB\\u05E1\\u05E0\\u05D3\\u05E8\\\\Documents\\\\Visual Studio 2019\\\\project_smart_distribution\\\\socket-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05E9\\u05E8 \\u05D0\\u05DC\\u05DB\\u05E1\\u05E0\\u05D3\\u05E8\\\\Documents\\\\Visual Studio 2019\\\\project_smart_distribution\\\\socket-client\\\\src\\\\chat.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport './style.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Glyphicon } from 'react-bootstrap';\nimport socketIOClient from \"socket.io-client\";\n\nclass Chat extends Component {\n  constructor({\n    match\n  }) {\n    super();\n\n    this.componentDidMount = () => {\n      document.body.classList.toggle('chat');\n      this.setState({\n        name: this.getShortName(this.userName.name)\n      });\n      const socket = socketIOClient(this.state.endpoint);\n      socket.on('message', message => {\n        if (message.name !== this.state.name) {\n          let arr = this.state.allMessages;\n          arr.push(message);\n          this.setState({\n            allMessages: arr\n          });\n        }\n      });\n    };\n\n    this.send = () => {\n      let newMessage = {\n        type: 'send',\n        content: this.state.message,\n        name: this.state.name,\n        time: this.getTime()\n      };\n      let arr = this.state.allMessages;\n      arr.push(newMessage);\n      this.setState({\n        allMessages: arr\n      });\n      this.setState({\n        message: ''\n      });\n\n      let sendMessage = _objectSpread({}, newMessage);\n\n      sendMessage.type = \"recieve\";\n      const socket = socketIOClient(this.state.endpoint);\n      socket.emit('message', sendMessage);\n    };\n\n    this.userName = match.params;\n    this.state = {\n      endpoint: \"localhost:4001\",\n      message: '',\n      name: '',\n      allMessages: []\n    };\n    this.updateMessage = this.updateMessage.bind(this);\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('chat');\n  }\n\n  updateMessage(e) {\n    this.setState({\n      message: e.target.value\n    });\n  }\n\n  render() {\n    const socket = socketIOClient(this.state.endpoint);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 col-xl-6 chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header msg_head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex bd-highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img_cont\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rounded-circle user_img userNameCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }\n    }, this.state.name), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"online_icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user_info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 10\n      }\n    }, \"Chat\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }\n    }, this.state.allMessages.length, \" Messages\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body msg_card_body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, this.renederMessages()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"\",\n      className: \"roundCorner form-control type_msg \",\n      placeholder: \"Type your message...\",\n      value: this.state.message,\n      onChange: this.updateMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.send,\n      className: \"input-group-text send_btn costumSendBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Glyphicon, {\n      glyph: \"send\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 87\n      }\n    })))))))));\n  }\n\n  getTime() {\n    let date = new Date();\n    return date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n  }\n\n  getShortName(name) {\n    let short = '';\n    let arr = name.split(\" \");\n    arr.forEach(function (name) {\n      short += name.charAt(0);\n    });\n    return short.toUpperCase();\n  }\n\n  renederMessages() {\n    return this.state.allMessages.map(message => this.getMessage(message));\n  }\n\n  getMessage(message) {\n    if (message.type == 'send') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: message.time,\n        className: \"d-flex justify-content-end mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"msg_cotainer_send\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, message.content, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"msg_time_send\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 10\n        }\n      }, message.time)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"img_cont_msg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rounded-circle user_img_msg littleCircle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 8\n        }\n      }, this.state.name)));\n    }\n\n    if (message.type == 'recieve') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: message.time,\n        className: \"d-flex justify-content-start mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"img_cont_msg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rounded-circle user_img_msg littleCircleStart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 10\n        }\n      }, message.name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"msg_cotainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }, message.content, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"msg_time\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 10\n        }\n      }, message.time)));\n    }\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/אשר אלכסנדר/Documents/Visual Studio 2019/project_smart_distribution/socket-client/src/chat.js"],"names":["React","Component","render","Glyphicon","socketIOClient","Chat","constructor","match","componentDidMount","document","body","classList","toggle","setState","name","getShortName","userName","socket","state","endpoint","on","message","arr","allMessages","push","send","newMessage","type","content","time","getTime","sendMessage","emit","params","updateMessage","bind","componentWillUnmount","remove","e","target","value","length","renederMessages","date","Date","getHours","getMinutes","getSeconds","short","split","forEach","charAt","toUpperCase","map","getMessage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport './style.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Glyphicon } from 'react-bootstrap';\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nclass Chat extends Component {\r\n  constructor({match}) {\r\n    super();\r\n    this.userName = match.params;\r\n    this.state = {\r\n      endpoint: \"localhost:4001\",\r\n      message:'',\r\n      name:'',\r\n      allMessages:[]\r\n    };\r\n  \r\n  \r\n\r\n    this.updateMessage = this.updateMessage.bind(this);\r\n  \r\n  }\r\n\r\n  componentDidMount = () => {\r\n\t   document.body.classList.toggle('chat');\r\n\t   \r\n     this.setState({name: this.getShortName(this.userName.name)});\r\n      const socket = socketIOClient(this.state.endpoint);\r\n      \r\n      socket.on('message', (message) => {\r\n\t\t  if(message.name !== this.state.name)\r\n\t\t  {\r\n\t\t\t let arr = this.state.allMessages;\r\n\t\t\t  arr.push(message);\r\n\t\t\t  this.setState({allMessages: arr});\r\n\t\t  }\r\n      })\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    document.body.classList.remove('chat')\r\n  }\r\n\r\n\r\n   updateMessage(e) {\r\n      this.setState({message: e.target.value});\r\n   }\r\n\r\n  render() {\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    return (\r\n    <div className=\"container-fluid h-100\">\r\n\t\t\t<div className=\"row justify-content-center h-100\">\r\n\t\t\t\r\n\t\t\t\t<div className=\"col-md-8 col-xl-6 chat\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-header msg_head\">\r\n\t\t\t\t\t\t\t<div className=\"d-flex bd-highlight\">\r\n\t\t\t\t\t\t\t\t<div className=\"img_cont\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"rounded-circle user_img userNameCard\">{this.state.name}</div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"online_icon\"></span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"user_info\">\r\n\t\t\t\t\t\t\t\t\t<span>Chat</span>\r\n\t\t\t\t\t\t\t\t\t<p>{this.state.allMessages.length} Messages</p>\r\n                  \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body msg_card_body\">\r\n\r\n            {this.renederMessages()}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-footer\">\r\n\t\t\t\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<textarea name=\"\" className=\"roundCorner form-control type_msg \" placeholder=\"Type your message...\"  value = {this.state.message} \r\n               onChange = {this.updateMessage}></textarea>\r\n\t\t\t\t\t\t\t\t<div className=\"input-group-append\">\r\n\t\t\t\t\t\t\t\t\t<span onClick={this.send}className=\"input-group-text send_btn costumSendBtn\"><Glyphicon             \r\n                      glyph=\"send\"/></span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    \r\n    );\r\n\r\n\r\n  }\r\n  send = ()=>\r\n  { \r\n    let newMessage={\r\n    type:'send',\r\n    content:this.state.message,\r\n    name:this.state.name,\r\n    time: this.getTime()\r\n   }\r\n   let arr = this.state.allMessages;\r\n   arr.push(newMessage);\r\n   this.setState({allMessages: arr});\r\n   this.setState({message: ''});\r\n\r\n    let sendMessage = {...newMessage};\r\n    sendMessage.type = \"recieve\";\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.emit('message', sendMessage)\r\n\r\n  }\r\n  getTime(){\r\n    let date = new Date();\r\n    return date.getHours()+\":\"+date.getMinutes()+\":\"+date.getSeconds();\r\n  }\r\n\r\n  getShortName(name){\r\n    let short = '';\r\n    let arr = name.split(\" \")\r\n    arr.forEach(function(name) {\r\n      short+=name.charAt(0);\r\n    });\r\n    return short.toUpperCase();\r\n    \r\n  }\r\n\r\n  renederMessages(){\r\n    return this.state.allMessages.map(message=>this.getMessage(message));\r\n  }\r\n\r\n  getMessage(message){\r\n    if(message.type == 'send'){\r\n\r\n      return <div key={message.time} className=\"d-flex justify-content-end mb-4\">\r\n\t\t\t\t\t\t\t\t<div className=\"msg_cotainer_send\">\r\n\t\t\t\t\t\t\t\t\t{message.content}\r\n\t\t\t\t\t\t\t\t\t<span className=\"msg_time_send\">{message.time}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"img_cont_msg\">\r\n\t\t\t\t\t\t\t<div className=\"rounded-circle user_img_msg littleCircle\">{this.state.name}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>;\r\n    }\r\n\r\n    if(message.type == 'recieve'){\r\n\r\n      return <div key={message.time} className=\"d-flex justify-content-start mb-4\">\r\n\t\t\t\t\t\t\t\t<div className=\"img_cont_msg\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"rounded-circle user_img_msg littleCircleStart\">{message.name}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"msg_cotainer\">\r\n\t\t\t\t\t\t\t\t\t{message.content}\r\n\t\t\t\t\t\t\t\t\t<span className=\"msg_time\">{message.time}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>;\r\n    }\r\n\r\n \r\n\r\n\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n\r\n"]},"metadata":{},"sourceType":"module"}